// Generated by CoffeeScript 1.7.1
(function() {
  var app, peopleCtrl,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  app = angular.module('Pyoopil.Controllers');

  peopleCtrl = (function(_super) {
    __extends(peopleCtrl, _super);

    function peopleCtrl() {
      this.restrictUser = __bind(this.restrictUser, this);
      this.submitModerators = __bind(this.submitModerators, this);
      this.restrictUsers = __bind(this.restrictUsers, this);
      this.assignModerators = __bind(this.assignModerators, this);
      return peopleCtrl.__super__.constructor.apply(this, arguments);
    }

    peopleCtrl.register(app);

    peopleCtrl.inject('$scope', 'peopleService', 'Utilities', 'Notify');

    peopleCtrl.prototype.initialize = function() {
      this.peopleService.init(this.$scope);
      return this.$scope.$on('READ.Peoples', (function(_this) {
        return function(evt, data) {
          return _this.$scope.users = data;
        };
      })(this));
    };

    peopleCtrl.prototype.assignModerators = function(evt) {
      return this.Utilities.openModal('assign-moderators');
    };

    peopleCtrl.prototype.restrictUsers = function(evt) {
      return this.Utilities.openModal('restrict-users');
    };

    peopleCtrl.prototype.submitModerators = function() {
      var data, form;
      form = this.$scope.assignForm;
      if (form.$invalid) {
        this.Notify.alert('Please enter valid users', 'error');
        return;
      }
      if (form.$valid) {
        data = {
          'ids': this.$scope.selectedUsers.join(',')
        };
        this.peopleService.postForm('setModerator.json', data, function(data) {
          return this.emit('UPDATE.Moderator');
        });
        return this.Utilities.closeModal();
      }
    };

    peopleCtrl.prototype.restrictUser = function() {
      var data, form;
      form = this.$scope.restrictForm;
      if (form.$invalid) {
        this.Notify.alert('Please enter valid users', 'error');
        return;
      }
      if (form.$valid) {
        data = {
          'ids': this.$scope.selectedUsers.join(',')
        };
        this.peopleService.postForm('setRestricted.json', data, function(data) {
          return this.emit('UPDATE.Restricted');
        });
        return this.Utilities.closeModal();
      }
    };

    return peopleCtrl;

  })(BaseCtrl);

}).call(this);

//# sourceMappingURL=people.map
