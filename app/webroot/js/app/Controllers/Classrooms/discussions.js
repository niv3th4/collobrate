// Generated by CoffeeScript 1.7.1
(function() {
  var app, discussionsCtrl,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  app = angular.module('Pyoopil.Controllers');

  discussionsCtrl = (function(_super) {
    __extends(discussionsCtrl, _super);

    function discussionsCtrl() {
      this.deletePollChoice = __bind(this.deletePollChoice, this);
      return discussionsCtrl.__super__.constructor.apply(this, arguments);
    }

    discussionsCtrl.register(app);

    discussionsCtrl.inject('$scope', 'Notify', 'FileUploader', '$document', 'discussionService');

    discussionsCtrl.prototype.initialize = function() {
      this.$scope.Discussion = {};
      this.$scope.isSubmitted = false;
      this.$scope.choices = [];
      this.$scope.uploader = new this.FileUploader({
        filters: [
          {
            name: 'singleUpload',
            fn: function(item, options) {
              return this.queue.length === 0;
            }
          }
        ]
      });
      this.$scope.ckeditorOptions = {
        height: '200px'
      };
      this.discussionService.init(this.$scope);
      return this.addListeners();
    };

    discussionsCtrl.prototype.addListeners = function() {
      this.$scope.$on('UPDATE.DiscussionType', (function(_this) {
        return function(evt, data) {
          return _this.changeDiscussion(evt, data);
        };
      })(this));
      this.$scope.submit = (function(_this) {
        return function(e) {
          return _this.submit(e);
        };
      })(this);
      this.$scope.deleteChoice = this.deletePollChoice;
      return this.$document.on('click', '.add-choice', (function(_this) {
        return function(evt) {
          return _this.addPollChoice(evt);
        };
      })(this));
    };

    discussionsCtrl.prototype.changeDiscussion = function(evt, data) {
      this.$scope.Discussion.type = data.name;
      if (!this.$scope.$$phase) {
        return this.$scope.$digest();
      }
    };

    discussionsCtrl.prototype.addPollChoice = function(evt) {
      var idx;
      if (this.$scope.choices.length < 6) {
        idx = _.uniqueId('choice_');
        this.$scope.choices.push({
          id: idx
        });
        if (!this.$scope.$$phase) {
          return this.$scope.$digest();
        }
      }
    };

    discussionsCtrl.prototype.deletePollChoice = function(id) {
      if (id == null) {
        return;
      }
      this.$scope.choices = _.reject(this.$scope.choices, function(choice, predicate) {
        return choice.id === id;
      });
      if (!this.$scope.$$phase) {
        return this.$scope.$digest();
      }
    };

    discussionsCtrl.prototype.submit = function(e) {
      var choices, data, form;
      this.$scope.isSubmitted = true;
      if (!this.$scope.$$phase) {
        this.$scope.$digest();
      }
      form = this.$scope.discussionForm;
      if (form.$invalid) {
        this.Notify.alert('Please enter valid details', 'error');
        return;
      }
      if (form.$valid) {
        choices = angular.element('.poll-choice input');
        data = {};
        if (this.$scope.Discussion.type === 'poll') {
          data.Pollchoice = {};
          angular.forEach(choices, (function(_this) {
            return function(choice, idx) {
              data.Pollchoice[idx] = {};
              return data.Pollchoice[idx]['choice'] = choice.value;
            };
          })(this));
        }
        data["Discussion"] = this.$scope.Discussion;
        this.discussionService.postForm('add.json', data, function(data) {
          return this.emit('READ.Discussions', data);
        });
        this.$scope.isSubmitted = false;
        return this.$scope.Discussion = {};
      }
    };

    return discussionsCtrl;

  })(BaseCtrl);

}).call(this);

//# sourceMappingURL=discussions.map
