// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  angular.module('Pyoopil.Services').factory('CSBase', [
    'EventEmitter', 'Utilities', 'Form', '$cookieStore', 'Notify', function(EventEmitter, Utilities, Form, $cookieStore, Notify) {
      var CSBase;
      return CSBase = (function(_super) {
        __extends(CSBase, _super);

        function CSBase() {
          this.postForm = __bind(this.postForm, this);
          this.setCurrentClassroom = __bind(this.setCurrentClassroom, this);
          this.path = Utilities.getPath();
          this.path += 'Classrooms/';
        }

        CSBase.prototype.init = function(scope) {
          CSBase.__super__.init.call(this, scope);
          this.path = Utilities.getPath();
          this.path += 'Classrooms/';
          this.currentClassroom = this.getCurrentClassroom();
          this.$scope.pageNo = 1;
          return this.addListeners();
        };

        CSBase.prototype.addListeners = function() {
          this.$scope.$on('END.Scroll', (function(_this) {
            return function(evt) {
              return _this.loadMoreData(evt);
            };
          })(this));
          return this.$scope.$on('$destroy', (function(_this) {
            return function() {
              return _this.destroyScope;
            };
          })(this));
        };

        CSBase.prototype.getData = function(url) {
          var path;
          path = this.path + url;
          return Form.getData(path);
        };

        CSBase.prototype.postData = function(url, data) {
          var path;
          path = this.path + url;
          return Form.postData(data, path);
        };

        CSBase.prototype.getDatum = function() {
          var path, promise;
          path = this.getUrl + this.$scope.pageNo;
          promise = this.getData(path);
          return promise.then((function(_this) {
            return function(data) {
              _this.$scope.permissions = data.data.permissions;
              _this.getCallback(data.data.data);
              if (!_this.$scope.$$phase) {
                return _this.$scope.$digest();
              }
            };
          })(this));
        };

        CSBase.prototype.rendered = function() {
          return this.emit('UPDATE.Scroll', true);
        };

        CSBase.prototype.loadMoreData = function(evt) {
          this.$scope.pageNo += 1;
          return this.getDatum();
        };

        CSBase.prototype.getCurrentClassroom = function() {
          return $cookieStore.get('classroom');
        };

        CSBase.prototype.setCurrentClassroom = function(id) {
          $cookieStore.remove('classroom');
          return $cookieStore.put('classroom', id);
        };

        CSBase.prototype.postForm = function(url, data) {
          var promise;
          promise = this.postData(url, data);
          return promise.then((function(_this) {
            return function(data) {
              return _this.getCallback(data.data.data);
            };
          })(this));
        };

        CSBase.prototype.destroyScope = function() {
          this.$scope.pageNo = 1;
          this.path = false;
          return this.currentClassroom = false;
        };

        return CSBase;

      })(EventEmitter);
    }
  ]);

}).call(this);

//# sourceMappingURL=@Base.map
